//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ColpatriaSAI.UI.MVC.LoggingSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoggingSvc.ILogging")]
    public interface ILogging {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogging/Auditoria", ReplyAction="http://tempuri.org/ILogging/AuditoriaResponse")]
        bool Auditoria(string mensaje, int prioridad, string modulo, ColpatriaSAI.Negocio.Entidades.Informacion.InfoAplicacion info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogging/Error", ReplyAction="http://tempuri.org/ILogging/ErrorResponse")]
        bool Error(string mensaje, int prioridad, string modulo, System.Diagnostics.TraceEventType tipoEvento, ColpatriaSAI.Negocio.Entidades.Informacion.InfoAplicacion info);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggingChannel : ColpatriaSAI.UI.MVC.LoggingSvc.ILogging, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggingClient : System.ServiceModel.ClientBase<ColpatriaSAI.UI.MVC.LoggingSvc.ILogging>, ColpatriaSAI.UI.MVC.LoggingSvc.ILogging {
        
        public LoggingClient() {
        }
        
        public LoggingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Auditoria(string mensaje, int prioridad, string modulo, ColpatriaSAI.Negocio.Entidades.Informacion.InfoAplicacion info) {
            return base.Channel.Auditoria(mensaje, prioridad, modulo, info);
        }
        
        public bool Error(string mensaje, int prioridad, string modulo, System.Diagnostics.TraceEventType tipoEvento, ColpatriaSAI.Negocio.Entidades.Informacion.InfoAplicacion info) {
            return base.Channel.Error(mensaje, prioridad, modulo, tipoEvento, info);
        }
    }
}
